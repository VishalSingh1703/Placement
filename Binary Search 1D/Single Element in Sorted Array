https://leetcode.com/problems/single-element-in-a-sorted-array/submissions/1091793019/


class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {

        // This solution takes O(N) time
        // int ans = nums[0];
        // for(int i = 1; i<nums.size(); i++)
        // {
        //     ans ^= nums[i];
        // }
        // return ans;

        if(nums.size() == 1) return nums[0];
        if(nums[0] != nums[1]) return nums[0];
        if(nums[nums.size()-1]!= nums[nums.size()-2]) return nums[nums.size()-1];
        int left = 1, right = nums.size()-2;
        int mid;
        while(left<=right)
        {
            mid = left + (right - left)/2;
            if(nums[mid]!=nums[mid+1] && nums[mid-1]!=nums[mid]) return nums[mid];
            else if((mid % 2 == 0 && nums[mid] == nums[mid + 1]) || (mid % 2 == 1 && nums[mid] == nums[mid - 1])) left = mid + 1;
            else right = mid - 1;
        }
        return -1;
    }
};
