https://leetcode.com/problems/word-search/


class Solution {
public:

    bool solve(int i, int j, int m, int n, string word, vector<vector<char>> &board, int index)
    {
        if(index == word.size()) return true;
        else if(i<0 || j<0 || i==m || j==n || word[index] != board[i][j])return false;

        char ch = board[i][j];
        board[i][j] = '.';
        bool p1 = solve(i + 1, j, m, n, word, board, index + 1);
        bool p2 = solve(i, j+1, m, n, word, board, index + 1);
        bool p3 = solve(i - 1, j, m, n, word, board, index + 1);
        bool p4 = solve(i, j-1, m, n, word, board, index + 1);
        board[i][j] = ch;
        return p1 || p2 || p3 || p4;
    }

    bool exist(vector<vector<char>>& board, string word) {
        int m = board.size();
        int n = board[0].size();
        for(int i = 0; i<m; i++)
        {
            for(int j = 0; j<n; j++)
            {
                if(solve(i, j, m, n, word, board, 0)) return true;
            }
        }
        return false;
    }
};
