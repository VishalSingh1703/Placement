https://leetcode.com/problems/combination-sum/


class Solution {
public:
    void permute(int index, vector<int> &cand, vector<int> &ds, vector<vector<int>> &ans, int target)
    {
        if(index == cand.size())
        {
            if(target == 0)
            {
                ans.push_back(ds);
            }
            return;
        }
        if(cand[index]<=target)
        {
            ds.push_back(cand[index]);
            permute(index, cand, ds, ans, target - cand[index]);
            ds.pop_back();
        }
        permute(index + 1, cand, ds, ans, target);
    }

    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> ds;
        permute(0, candidates, ds, ans, target);
        return ans;
    }
};
