https://leetcode.com/problems/subsets-ii/

class Solution {
public:
    void permute(int index, vector<int> &nums, vector<int> &subset, vector<vector<int>> &superSet, int n)
    {
        if(index >= n)
        {
            superSet.push_back(subset);
            return;
        }
        else
        {
            subset.push_back(nums[index]);
            permute(index + 1, nums, subset, superSet, n);
            subset.pop_back();
            
            while(index<n-1 && nums[index] == nums[index+1]) index++;
            permute(index + 1, nums, subset, superSet, n);
            return;
        }
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int n = nums.size();
        vector<int> subset;
        vector<vector<int>> superSet;
        permute(0, nums, subset, superSet, n);
        return superSet;
    }
};
